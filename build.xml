<?xml version="1.0"?>
<project name="Java Boxing Profiler" default="root-jar">

  <property name="lib.dir" location="lib" />
  <property name="src.dir" location="src" />
  <property name="build.dir" location="build" />
  <property name="dist.dir" location="dist" />

  <property name="main" value="main" />
  <property name="samples" value="etc" />
  <property name="test" value="test" />

  <property name="main.src.dir" location="${src.dir}/${main}" />
  <property name="samples.src.dir" location="${samples}" />
  <property name="test.src.dir" location="${src.dir}/${test}" />

  <property name="main.classes.dir" location="${build.dir}/${main}" />
  <property name="samples.classes.dir" location="${build.dir}/${samples}" />
  <property name="test.classes.dir" location="${build.dir}/${test}" />

  <property name="default.class" value="ist.meic.ap.BoxingProfiler" />
  <property name="extended.class" value="ist.meic.ap.BoxingProfilerExtended" />

  <property name="default.jar.name" value="boxingProfiler.jar" />
  <property name="extended.jar.name" value="boxingProfilerExtended.jar" />
  <property name="dist.default.jar" location="${dist.dir}/${default.jar.name}" />
  <property name="dist.extended.jar" location="${dist.dir}/${extended.jar.name}" />

  <property name="release.zip" value="project.zip" />
  <property name="zip.prefix.dir" value="g05" />
  <property name="slides.pdf" location="p1.pdf" />

  <property name="default.samples.jar"
            location="${dist.dir}/default-samples.jar" />
  <property name="extended.samples.jar"
            location="${dist.dir}/extended-samples.jar" />

  <property name="test.reports.dir" location="test-output" />


  <path id="classpath">
    <pathelement location="${lib.dir}/javassist.jar" />
    <pathelement location="${main.classes.dir}" />
  </path>

  <path id="test.compile.classpath">
    <path refid="classpath" />
    <pathelement location="${lib.dir}/testng.jar" />
  </path>

  <path id="test.classpath">
    <path refid="test.compile.classpath" />
    <pathelement location="${lib.dir}/jcommander.jar" />
    <pathelement location="${test.classes.dir}" />
  </path>


  <!-- =================================================================== -->
  <!-- Additional tasks                                                     -->
  <!-- =================================================================== -->
  <taskdef name="testng"
           classpathref="test.classpath"
           classname="org.testng.TestNGAntTask" />


  <!-- =================================================================== -->
  <!-- Compilation                                                         -->
  <!-- =================================================================== -->
  <target name="compile" depends="compile-main" />

  <target name="compile-main" depends="init-main">
    <javac srcdir="${main.src.dir}"
           destdir="${main.classes.dir}"
           includeantruntime="false">
      <classpath refid="classpath" />
    </javac>
  </target>

  <target name="jar-default" depends="init-jar, compile-main">
    <jar destfile="${dist.default.jar}" basedir="${main.classes.dir}">
    	<zipfileset src="${lib.dir}/javassist.jar" />
      <manifest>
        <attribute name="Main-Class" value="${default.class}" />
      </manifest>
    </jar>
  </target>
	
	<target name="jar" depends="jar-default" />

	<target name="jar-extended" depends="init-jar, compile-main">
	  <jar destfile="${dist.extended.jar}" basedir="${main.classes.dir}">
	    <zipfileset src="${lib.dir}/javassist.jar" />
	    <manifest>
	      <attribute name="Main-Class" value="${extended.class}" />
	    </manifest>
	  </jar>
	</target>


  <!-- =================================================================== -->
  <!-- Release                                                             -->
  <!-- =================================================================== -->
  <target name="root-jar" depends="jar-default, jar-extended">
    <copy file="${dist.default.jar}" todir="." />
    <copy file="${dist.extended.jar}" todir="." />
  </target>

  <target name="release">
    <zip destfile="${release.zip}">
      <zipfileset dir="." includes="lib/**/*" prefix="${zip.prefix.dir}" />
      <zipfileset dir="." includes="src/**/*" prefix="${zip.prefix.dir}" />
      <zipfileset dir="."
                  includes="${samples}/**/*"
                  prefix="${zip.prefix.dir}" />
      <zipfileset dir="." includes="build.xml" prefix="${zip.prefix.dir}" />
      <zipfileset dir="." includes="${slides.pdf}" prefix="${zip.prefix.dir}" />
    </zip>
  </target>

  <target name="zip" depends="release" />

  <!-- =================================================================== -->
  <!-- Samples (compiling and running)                                     -->
  <!-- =================================================================== -->
  <target name="compile-samples" depends="init-samples">
    <javac srcdir="${samples.src.dir}"
           destdir="${samples.classes.dir}"
           includeantruntime="false">
    </javac>
  </target>

  <target name="jar-default-samples" depends="jar-default, compile-samples">
    <jar destfile="${default.samples.jar}" filesetmanifest="merge">
      <zipfileset src="${dist.default.jar}" />
      <fileset dir="${samples.classes.dir}" />
    </jar>
  </target>

  <target name="jar-extended-samples" depends="jar-extended, compile-samples">
    <jar destfile="${extended.samples.jar}" filesetmanifest="merge">
      <zipfileset src="${dist.extended.jar}" />
      <fileset dir="${samples.classes.dir}" />
    </jar>
  </target>

  <target name="run" depends="run-default" />

  <target name="run-default"
          depends="jar-default-samples, run-default-args, run-default-noargs" />

  <target name="run-default-args" if="args">
    <java jar="${default.samples.jar}" fork="true">
      <arg value="${args}" />
    </java>
  </target>

  <target name="run-default-noargs" unless="args">
    <java jar="${default.samples.jar}" fork="true" />
  </target>
  
  <target name="run-extended"
          depends="jar-extended-samples, run-extended-args, run-extended-noargs" />
  
  <target name="run-extended-args" if="args">
    <java jar="${extended.samples.jar}" fork="true">
      <arg value="${args}" />
    </java>
  </target>

  <target name="run-extended-noargs" unless="args">
    <java jar="${extended.samples.jar}" fork="true" />
  </target>

  <!-- =================================================================== -->
  <!-- Tests: Compile and run                                              -->
  <!-- =================================================================== -->
  <target name="test-compile" depends="init-tests, compile">
    <javac srcdir="${test.src.dir}"
           destdir="${test.classes.dir}"
           includeantruntime="false">
      <classpath refid="test.compile.classpath" />
    </javac>
  </target>

  <target name="test" depends="test-compile">
    <testng classpathref="test.classpath" outputDir="${test.reports.dir}">
      <classfileset dir="${test.classes.dir}" includes="**/*.class" />
    </testng>
  </target>


  <!-- =================================================================== -->
  <!-- Build preparation and cleaning                                      -->
  <!-- =================================================================== -->
  <target name="clean"
          depends="clean-main,clean-tests,clean-samples,clean-release,clean-jar" >
    <delete dir="${build.dir}" />
    <delete dir="${dist.dir}" />
  </target>


  <target name="init-main">
    <mkdir dir="${main.classes.dir}" />
  </target>

  <target name="clean-main">
    <delete dir="${main.classes.dir}" />
  </target>


  <target name="init-jar">
    <mkdir dir="${dist.dir}" />
  </target>

  <target name="clean-jar">
    <delete file="${dist.default.jar}" />
  </target>


  <target name="init-release" />

  <target name="clean-release">
    <delete file="${default.jar.name}" />
  	<delete file="${extended.jar.name}" />
    <delete file="${release.zip}" />
  </target>


  <target name="init-samples">
    <mkdir dir="${samples.classes.dir}" />
  </target>

  <target name="clean-samples">
    <delete file="${runnable.samples.jar}" />
    <delete dir="${samples.classes.dir}" />
  </target>


  <target name="init-tests">
    <mkdir dir="${test.classes.dir}" />
    <mkdir dir="${test.reports.dir}" />
  </target>

  <target name="clean-tests">
    <delete dir="${test.reports.dir}" />
    <delete dir="${test.classes.dir}" />
  </target>
</project>
